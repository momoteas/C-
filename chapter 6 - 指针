6.1 内存和地址：
    。地址与内容：名字和内存位置之间的关联并不是硬件所提供的，它是由编译器为我们实现的。硬件仍然通过地址访问内存位置；
    
6.2 值和类型：
    。变量包含了一系列内容为0和1的位。它们可以被解释为整数，也可以被解释为浮点数，这取决于它们被使用的方式。不能简单地通过检查一个值的位来判断它的类型；
    
6.3 指针变量的内容：
    。指针的初始化是用&操作符完成的，它用于产生操作数的内存地址；

6.4 间接访问操作符：
    。通过一个指针访问它所指向的地址的过程称为间接访问（indirection）或解引用指针（dereferencing the pointer）。这个用于执行间接访问的操作符是
    单目操作符*；

6.5 未初始化和非法的指针：
    。例如：  int *a;
             ...
             *a=12;
             
6.6 NULL指针：
    。







