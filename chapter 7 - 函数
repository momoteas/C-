7.1 函数的定义：

7.2 函数的声明：
    。7.2.1 原型
    。7.2.2 函数的缺省认定：
        。当程序调用一个无法见到原型的函数时，编译器便认为该函数返回一个整型值；
        
7.3 函数的参数：
    。C函数的所有参数均以“传值调用”方式进行传递，这意味着函数将获得参数值的一份拷贝。
    。C的规则很简单：所有参数都是传值调用。但是，如果被传递的参数时一个数组名，并且在函数中使用下标引用该数组的参数，
  那么在函数中对数组元素进行修改的是调用程序中的数组元素。函数将访问调用程序的数组元素，数组并不会被复制。这个行为
  被称为“传址调用”；

7.4 ADT和黑盒：
    。限制对模块的访问是通过static关键字的合理使用实现的，它可以限制对那些并非接口的函数和数据的访问；

7.5 递归：
    。7.5.1 追踪递归函数
        。现在quotient的值变成了零，递归函数便不再调用自身，而是开始打印输出。然后函数返回，并开始销毁堆栈上的变
        量值；
    。7.5.2 递归与迭代

7.6 可变参数列表：
    。7.6.1 stdarg宏
        。可变参数列表是通过宏来实现的，这些宏定义于stdarg.h头文件，它是标准库的一部分。这个头文件声明了一个类型
        va_list和三个宏--va_start,va_arg和va_end。我们可以声明一个类型为va_list的变量，与这几个宏配合使用，
        访问参数的值；



